/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   Cat.cpp                                         :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: chdonnat <chdonnat@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/05/05 15:52:30 by chdonnat          #+#    #+#             */
/*   Updated: 2025/05/05 16:14:41 by chdonnat         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <iostream>
#include <string>
#include "../include/Cat.hpp"

/* ************************************************************************** */
/*								canonical form  							  */
/* ************************************************************************** */

/* *************************** default constructor ************************** */

Cat::Cat() :
	AAnimal("Cat")
{
	_brain = new Brain();
}

/* ******************************* destructor ****************************** */

Cat::~Cat()
{
	std::cout << "Cat destructor." << std::endl;
	delete _brain;
}

/* ***************************** copy constructor *************************** */

Cat::Cat( const Cat& other ) :
	AAnimal(other)
{
	_type = other._type;
	_brain = new Brain(*other._brain);
}

/* ********************** copy assignment operator ************************** */

Cat& Cat::operator=( const Cat& other )
{
	if (this != &other)
	{
		AAnimal::operator=(other); 
		delete _brain;
		_brain = new Brain(*other._brain);
	}
	return (*this);
}

/* ************************************************************************** */
/*								public methods  							  */
/* ************************************************************************** */

/* ******************************* constructors ***************************** */

Cat::Cat( const std::string& type ) :
	AAnimal(type)
{
	_brain = new Brain();
}

/* ******************************** getters ********************************* */

Brain	*Cat::getBrain() const
{
	return (_brain);
}

/* ******************************** setters ******************************** */

/* ************************* other public methods ************************** */

void	Cat::makeSound() const
{
	std::cout << "Miaou! Miaou!" << std::endl;
}

/* ************************************************************************** */
/*								private methods  							  */
/* ************************************************************************** */

/* ************************************************************************** */
/*							non-member functions  							  */
/* ************************************************************************** */
